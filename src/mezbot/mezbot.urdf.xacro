<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="mezbot">

	<xacro:include filename="$(find mezbot)/mezbot.gazebo" />
	<!--xacro:include filename="$(find zed_wrapper)/urdf/zed.urdf" /-->
	<!-- physical constants definitions -->
	
	<xacro:property name="base_link_length" value="0.4"/>
	<xacro:property name="base_link_width" value="0.3648"/>
	<xacro:property name="wheel_width" value="0.0254"/>
	<xacro:property name="wheel_radius" value="0.0762"/>
	<xacro:property name="strut_length" value="0.0762"/>
	<xacro:property name="t_slot_width" value="0.03"/>
	<xacro:property name="pivot_length" value="0.0935"/>
	<xacro:property name="m_bracket_height" value="0.0762"/>
	<xacro:property name="m_bracket_width" value="0.055"/>
	<xacro:property name="m_bracket_thickness" value="0.00625"/>
	<xacro:property name="H_arm_length" value="0.2"/>
	<xacro:property name="pi" value="3.1416"/>

	<!-- material definitions -->

	<material name="Gray1">
		<color rgba = "0.7 0.7 0.7 1.0"/>
	</material>

	<material name="Cyan">
		<color rgba="0 0.7 0.7 1.0"/>
	</material>

	<material name="Gray2">
		<color rgba="0.3 0.3 0.3 1.0"/>
	</material>

	<material name="Black">
		<color rgba="0.1 0.1 0.1 1.0"/>
	</material>

	<material name="White">
		<color rgba="1 1 1 1"/>
	</material>

	<material name="Magenta">
		<color rgba="0.8 0 0.8 1"/>
	</material>

	<material name="Yellow">
		<color rgba="0.8 0.8 0 1.0"/>
	</material>

	<material name="Green">
		<color rgba="0 1 0 1"/>
	</material>

	<!-- singular links and joints -->

	<!--link name="base_footprint" >
    	<visual>
      		<origin rpy="0 0 3.14" xyz="0 0 ${t_slot_width/2} "/>
      	<geometry>
        	<box size="0.4 0.3648 0.03"/>
      	</geometry>
      		<material name="Gray1"/>
    	</visual>
  	</link>

  	<joint name="base_footprint_joint" type="fixed">
    	<origin xyz="0 0 0" rpy="0 0 3.14" />
    	<parent link="base_footprint" />
    	<child link="base_link" />
  	</joint>

  	<gazebo reference="base_footprint">
        <turnGravityOff>false</turnGravityOff>
	</gazebo-->

	 <link name="base_link">
		<visual>
			<origin xyz="0 0 ${t_slot_width/2} " rpy="0 0 0"/>
			<geometry>
				<box size="${base_link_length} ${base_link_width} ${t_slot_width}"/>
			</geometry>
			<material name="Gray1"/>
		</visual>
		<collision>
			<geometry>
				<box size="${base_link_length} ${base_link_width} ${t_slot_width}"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="1.53109"/>
			<inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.06"/>
		</inertial>
	</link>	

	
	<joint name="base_link_to_V_support" type="fixed">
		<parent link="base_link"/>
		<child link = "base_link_back_Vsupport"/>
		<origin xyz="0 0 0"/>
	</joint>

	<link name="base_link_back_Vsupport">
		<visual>
			<origin xyz="-${0.129-(t_slot_width/2)} 0 0.154" rpy="0 0 0"/>
			<geometry>
				<box size="${t_slot_width} ${t_slot_width} 0.308"/>
			</geometry>
			<material name="Gray1"/>
		</visual>
		<collision>
			<geometry>
				<box size="${t_slot_width} ${t_slot_width} 0.308"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="0.23"/>
			<inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
		</inertial>
	</link>

	<joint name="base_link_V_support_to_ZED_arm" type="fixed">
		<parent link="base_link_back_Vsupport"/>
		<child link = "ZED_arm"/>
		<origin xyz="0 0 0"/>
	</joint>

	<link name="ZED_arm">
		<visual>
			<origin xyz="-${base_link_length/4} 0 0.305" rpy="0 0 0"/>
			<geometry>
				<box size="${H_arm_length} ${t_slot_width} ${t_slot_width}"/>
			</geometry>
			<material name="Gray1"/>
		</visual>
		<collision>
			<geometry>
				<box size="${H_arm_length} ${t_slot_width} ${t_slot_width}"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="0.16"/>
			<inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
		</inertial>
	</link>

	<link name="base_link_back_Vsupport_scanner">
		<visual>
			<origin xyz="-${0.129-(t_slot_width/2)} 0 0.3415" rpy="0 0 0"/>
			<geometry>
				<box size="${t_slot_width} ${t_slot_width} 0.067"/>
			</geometry>
			<material name="Gray1"/>
		</visual>	
		<collision>
			<geometry>
				<box size="${t_slot_width} ${t_slot_width} 0.067"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="0.14"/>
			<inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.0"/>
		</inertial>
	</link>

	<joint name="ZED_arm_to_Scan_arm_V_support" type="fixed">
		<parent link="ZED_arm"/>
		<child link = "base_link_back_Vsupport_scanner"/>
		<origin xyz="0 0 0"/>
	</joint>

	<link name="base_link_frame_scanner_arm">
		<visual>
		    <origin xyz="-${base_link_length/4} 0 0.39" rpy="0 0 0"/>
			<geometry>
				<box size="${H_arm_length} ${t_slot_width} ${t_slot_width}"/>
			</geometry>
			<material name="Gray1"/>
		</visual>	
		<collision>
			<geometry>
				<box size="${H_arm_length} ${t_slot_width} ${t_slot_width}"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="0.16"/>
			<inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.0"/>
		</inertial>
	</link>

	<joint name="V_support_to_scan_arm" type="fixed">
		<parent link="base_link_back_Vsupport_scanner"/>
		<child link = "base_link_frame_scanner_arm"/>
		<origin xyz="0 0 0"/>
	</joint>

	<link name="battery">
		<visual>
			<origin xyz="0.01 0 0.1315" rpy="0 0 0"/>
			<geometry>
				<box size="0.17 0.33 0.173"/>
			</geometry>
			<material name="Black" />
		</visual>	
		<collision>
			<geometry>
				<box size="0.17 0.33 0.173"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="10"/>
			<inertia ixx="0.18" ixy="0.0" ixz="0.0" iyy="0.120" iyz="0.0" izz="0.110"/>
		</inertial>
	</link>

	<joint name="base_link_to_battery" type="fixed">
		<parent link="base_link"/>
		<child link = "battery"/>
		<origin xyz="0 0 0"/>
	</joint>

	
	<joint name="ZED_arm_to_ZED_cam" type="fixed">
		<parent link="ZED_arm"/>
		<child link="ZED_cam_link"/>
		<origin xyz="-0.016 0 0.335" />
	</joint>


	<link name="ZED_cam_link">
		<visual>
			
			<geometry>
				<box size="0.032 0.170 0.03"/>
			</geometry>
			<material name="Yellow"/>
		</visual>
		<collision>
			<geometry>
				<box size="0.032 0.170 0.03"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="0.412"/>
			<inertia ixx="0.016" ixy="0.0" ixz="0.0" iyy="0.015" iyz="0.0" izz="0.0"/>
		</inertial>
	</link>

	<link name="Green">
		<visual>
			<geometry>
				<cylinder length="0.165" radius="0.0645"/>
			</geometry>
			<material name="Green"/>
		</visual>
		<collision>
			<geometry>
				<cylinder length="0.165" radius="0.0645"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="1.9"/>
			<inertia ixx="0.235" ixy="0.0" ixz="0.018" iyy="0.236" iyz="0.01" izz="0.01"/>
		</inertial>
	</link>

	<joint name="scan" type="continuous">
		<parent link="base_link_frame_scanner_arm"/>
		<child link = "Green"/>
		<axis xyz="0 0 1"/>
		<origin xyz="0 0 0.4875" rpy="0 0 0"/>
	</joint>

	<link name="imu">
		<visual>
			<geometry>
				<box size="0.03 0.03 0.005"/>
			</geometry>
			<material name="Cyan"/>
		</visual>
		<collision>
			<geometry>
				<box size="0.03 0.03 0.005"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="0.01"/>
			<inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
		</inertial>
	</link>

	<joint name="imu" type="fixed">
		<parent link="base_link_frame_scanner_arm"/>
		<child link = "imu"/>
		<axis xyz="0 0 1"/>
		<origin xyz="-${0.129-(t_slot_width/2)} 0 0.4075" rpy="0 0 0"/>
	</joint>

	<!-- symmetric links and joints -->

	<!-- Defines macro to create a strut and associated joint with base_link -->
	<xacro:macro name="strut" params="prefix reflectx reflecty">
		<link name="${prefix}_strut">
			<visual>
				<origin xyz="${reflectx*(t_slot_width+0.06)} ${reflecty*((base_link_width/2)-(t_slot_width/2))} -${strut_length/2}"/>
				<geometry>
					<box size="${t_slot_width} ${t_slot_width} ${strut_length}"/>
				</geometry>
				<material name="Gray1"/>
			</visual>
			<collision>
				<geometry>
					<box size="${t_slot_width} ${t_slot_width} ${strut_length}"/>
				</geometry>
			</collision>
			<inertial>
				<mass value="0.07"/>
				<inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.0"/>
			</inertial>
		</link>
		
		<joint name="base_link_to_${prefix}_strut" type="fixed">
			<parent link="base_link"/>
			<child link="${prefix}_strut"/>
			<origin xyz="0 0 0"/>
		</joint>
	</xacro:macro>

	<!-- create the 4 struts attached to the base_link -->
	<xacro:strut prefix="FL" reflectx="1" reflecty="1"/>
	<xacro:strut prefix="FR" reflectx="1" reflecty="-1"/>
	<xacro:strut prefix="BL" reflectx="-1" reflecty="1"/>
	<xacro:strut prefix="BR" reflectx="-1" reflecty="-1"/>

	<!-- Define macro to create pivots -->
	<xacro:macro name="pivots" params="prefix reflectx reflecty">
		<link name="${prefix}_pivot">
			<visual>
				<origin xyz="${reflectx*((t_slot_width*1.5)+0.06+(pivot_length/2))} ${reflecty*((base_link_width/2)-(t_slot_width/2))} -${strut_length-(t_slot_width/2)}"/>
				<geometry>
					<box size="${pivot_length} ${t_slot_width} ${t_slot_width}"/>
				</geometry>
				<material name="Gray2"/>
			</visual>
			<collision>
				<geometry>
					<box size=" ${pivot_length} ${t_slot_width} ${t_slot_width}"/>
				</geometry>
			</collision>
			<inertial>
				<mass value="0.1"/>
				<inertia ixx="0.01" ixy="0.0" ixz="0.01" iyy="0.01" iyz="0.0" izz="0.0"/>
			</inertial>
		</link>

		<joint name="${prefix}_strut_to_pivot" type="fixed">
			<parent link="${prefix}_strut"/>
			<child link = "${prefix}_pivot"/>
			<origin xyz="0 0 0"/>
		</joint>
	</xacro:macro>

	<!-- Define the 4 pivots -->
	<xacro:pivots prefix="FL" reflectx="1" reflecty="1"/>
	<xacro:pivots prefix="FR" reflectx="1" reflecty="-1"/>
	<xacro:pivots prefix="BL" reflectx="-1" reflecty="1"/>
	<xacro:pivots prefix="BR" reflectx="-1" reflecty="-1"/>	

	<!-- Define macro to create pivot extensions -->
	<xacro:macro name="pivotextension" params="prefix reflectx reflecty">
		<link name="${prefix}_pivotextension">
			<visual>
				<origin xyz="${reflectx*((t_slot_width*1.5)+0.096+(pivot_length/2))} ${reflecty*((base_link_width/2)-(t_slot_width/2))} -${strut_length-(t_slot_width/2)}"/>
				<geometry>
					<box size="${strut_length} ${t_slot_width} ${t_slot_width}"/>
				</geometry>
				<material name="Gray1"/>
			</visual>
			<collision>
				<geometry>
					<box size="${strut_length} ${t_slot_width} ${t_slot_width}"/>
				</geometry>
			</collision>
			<inertial>
				<mass value="0.07"/>
				<inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.0"/>
			</inertial>
		</link>

		<joint name="${prefix}_wheel_pivot" type="prismatic">
			<parent link="${prefix}_pivot"/>
			<child link = "${prefix}_pivotextension"/>
			<axis xyz="0 0 1 "/>
			<origin xyz="0 0 0"/>
			<dynamics damping="1.0" friction="0.0"/>
			<limit effort="0.0" lower="0.0" upper="0.0" velocity="0.0"/>
		</joint>
	</xacro:macro>

	<!-- Define the 4 pivot extensions -->
	<xacro:pivotextension prefix="FL" reflectx="1" reflecty="1"/>
	<xacro:pivotextension prefix="FR" reflectx="1" reflecty="-1"/>
	<xacro:pivotextension prefix="BL" reflectx="-1" reflecty="1"/>
	<xacro:pivotextension prefix="BR" reflectx="-1" reflecty="-1"/>

	<!-- Define motor bracket macro -->
	<xacro:macro name="motorbracket" params="prefix reflectx reflecty">
		<link name="${prefix}_motorbracket">
			<visual>
				<origin xyz="${reflectx*(base_link_length/2)} ${reflecty*((base_link_width/2)+0.035)} -0.115"/>
				<geometry>
					<box size="${m_bracket_width} ${m_bracket_thickness} ${m_bracket_height}"/>
				</geometry>
				<material name="Gray1"/>
			</visual>
			<collision>
				<geometry>
					<box size="${m_bracket_width} ${m_bracket_thickness} ${m_bracket_height}"/>
				</geometry>
			</collision>
			<inertial>
				<mass value="0.13"/>
				<inertia ixx="0.02" ixy="0.0" ixz="0.01" iyy="0.02" iyz="0.01" izz="0.01"/>
			</inertial>
		</link>

		<joint name="${prefix}_suspension" type="fixed">
			<parent link="${prefix}_pivotextension"/>
			<child link = "${prefix}_motorbracket"/>
		</joint>
	</xacro:macro>

	<!--define the 4 motor brackets -->
	<xacro:motorbracket prefix="FL" reflectx="1" reflecty="1"/>
	<xacro:motorbracket prefix="FR" reflectx="1" reflecty="-1"/>
	<xacro:motorbracket prefix="BL" reflectx="-1" reflecty="1"/>
	<xacro:motorbracket prefix="BR" reflectx="-1" reflecty="-1"/>

	<!-- Define the wheel -->

	<xacro:macro name="wheel" params="prefix reflectx reflecty">
		<link name="${prefix}_wheel">
			<visual>
				<geometry>
					<cylinder length="${wheel_width}" radius="${wheel_radius}"/>
				</geometry>
				<material name="White"/>
			</visual>
			<collision>
				<geometry>
					<cylinder length="${wheel_width}" radius="${wheel_radius}"/>
				</geometry>
			</collision>
			<inertial>
				<mass value="1"/>
				<inertia ixx="0.18" ixy="0.04" ixz="0.07" iyy="0.16" iyz="0.08" izz="0.09"/>
			</inertial>
		</link>

		<joint name="${prefix}_wheel_motion" type="continuous">
			<parent link="${prefix}_motorbracket"/>
			<child link = "${prefix}_wheel"/>
			<axis xyz="0 0 1"/>
			<origin xyz="${reflectx*(base_link_length/2)} ${reflecty*0.2403} -0.115" rpy="${pi/2} 0 0"/>
		</joint>
		<transmission name="${prefix}_transmission">
			<type>transmission_interface/SimpleTransmission</type>
			<joint name="${prefix}_wheel_motion">
				<hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
			</joint>
			<actuator name="${prefix}_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
		</transmission>
	</xacro:macro>

	<!-- Define the 4 wheels -->
	<xacro:wheel prefix="FL" reflectx="1" reflecty="1"/>
	<xacro:wheel prefix="FR" reflectx="1" reflecty="-1"/>
	<xacro:wheel prefix="BL" reflectx="-1" reflecty="1"/>
	<xacro:wheel prefix="BR" reflectx="-1" reflecty="-1"/>

	 
	<!-- Gazebo plugin for ROS control -->
	<!--gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
			<robotNamespace>/</robotNamespace>
		</plugin>
	</gazebo>

	<! Differential drive controller -->
	<!--gazebo>
		<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
			<legacyMode>false</legacyMode>
			<alwaysOn>true</alwaysOn>
			<updateRate>10</updateRate>
			<leftJoint>FL_wheel_motion BL_wheel_motion</leftJoint>
			<rightJoint>FR_wheel_motion BR_wheel_motion</rightJoint>
			<robotBaseFrame>base_link</robotBaseFrame>
			<wheelSeparation>0.506</wheelSeparation>
			<wheelDiameter>0.0762</wheelDiameter>
			<torque>1</torque>
			<commandTopic>cmd_vel</commandTopic>
			<odometryTopic>odom</odometryTopic>
			<odometryFrame>odom</odometryFrame>
			<publishWheelTF>true</publishWheelTF>
			<publishWheelJointState>true</publishWheelJointState>
		</plugin>
	</gazebo>

	<gazebo reference="ZED_cam_link">
		<sensor type="depth" name="Zed_cam">
			<always_on>1</always_on>
			<visualize>true</visualize>
			<camera>
				<horizontal_fov>1.5708</horizontal_fov>
				<image>
					<width>1280</width>
					<height>720</height>
					<format>R8G8B8</format>
				</image>
			<depth_camera>

			</depth_camera>
			<clip>
				<near>0.1</near>
				<far>10</far>
			</clip>
			</camera>

			<plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
				<alwaysOn>true</alwaysOn>
				<updateRate>30.0</updateRate>
				<cameraName>Zed_cam</cameraName>
				<imageTopicName>rgb/image_rect_color</imageTopicName>
				<cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
				<frameName>Zed_cam</frameName>
				<depthImageTopicName>depth/depth_registered</depthImageTopicName>
        		<depthImageTopicName>depth/image_raw</depthImageTopicName>
        		<depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        		<pointCloudTopicName>point_cloud/cloud_registered</pointCloudTopicName> 
        		<pointCloudTopicName>depth/points</pointCloudTopicName>
        		<pointCloudCutoff>1.0</pointCloudCutoff>
        		<hackBaseline>0.07</hackBaseline>
        		<distortionK1>0.0</distortionK1>
        		<distortionK2>0.0</distortionK2>
        		<distortionK3>0.0</distortionK3>
        		<distortionT1>0.0</distortionT1>
        		<distortionT2>0.0</distortionT2>
      		</plugin>
    	</sensor>
  	</gazebo-->

</robot>
